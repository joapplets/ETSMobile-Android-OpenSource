package ca.etsmtl.applets.etsmobile.models;

import java.io.Serializable;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.List;

import com.google.gson.annotations.SerializedName;

public class Session implements Serializable, Comparable<Session> {

	private static final long serialVersionUID = -632822145233952231L;

	@SerializedName("abrege")
	private String shortName;

	@SerializedName("auLong")
	private String longName;

	@SerializedName("dateDebut")
	private String dateDebutString;

	@SerializedName("dateFin")
	private String dateFinString;

	@SerializedName("dateFinCours")
	private String dateFinCoursString;

<<<<<<< HEAD
	//private List<ActivityCalendar> activities;
	
=======
	private List<ActivityCalendar> activities;

>>>>>>> dev
	private List<JoursRemplaces> joursRemplaces;
	


	private LinkedHashMap<String,List<ActivityCalendar>> activities;
	
	private int maxActivities=0;

	@Override
	public int compareTo(final Session s) {
		// TODO Auto-generated method stu

		return s.getDateDebut().compareTo(s.getDateFin());
	}

	public LinkedHashMap<String, List<ActivityCalendar>> getActivities() {
		return activities;
	}
	
	public List<ActivityCalendar> getActivities(String jour) {
		return this.activities.get(jour);
	}
	

	public Date getDateDebut() {
		SimpleDateFormat formatter;
		Date date;
		formatter = new SimpleDateFormat("yyyy-MM-dd");
		try {
			date = formatter.parse(getDateDebutString());
		} catch (final ParseException e) {
			date = null;
		}

		return date;
	}

	public String getDateDebutString() {
		return dateDebutString;
	}

	public Date getDateFin() {
		SimpleDateFormat formatter;
		Date date;
		formatter = new SimpleDateFormat("yyyy-MM-dd");
		try {
			date = formatter.parse(getDateFinString());
			date.setHours(23);
			date.setMinutes(59);
			date.setSeconds(59);
		} catch (final ParseException e) {
			date = null;
		}

		return date;
	}

	/**
	 * yyyy-MM-dd
	 * 
	 * @return formated string
	 */
	public Date getDateFinCours() {
		SimpleDateFormat formatter;
		Date date;
		formatter = new SimpleDateFormat("yyyy-MM-dd");
		try {
			date = formatter.parse(getDateFinCoursString());
			date.setHours(23);
			date.setMinutes(59);
			date.setSeconds(59);
		} catch (final ParseException e) {
			date = null;
		}

		return date;
	}

	public String getDateFinCoursString() {
		return dateFinCoursString;
	}

	public String getDateFinString() {
		return dateFinString;
	}

	public List<JoursRemplaces> getJoursRemplaces() {
		return joursRemplaces;
	}

	public String getLongName() {
		return longName;
	}

	public String getShortName() {
		return shortName;
	}



	
	public void setActivities(String jour, final List<ActivityCalendar> activities) {
		if(this.activities != null)
			this.activities.put(jour, activities);
		else
			this.activities = new LinkedHashMap<String,List<ActivityCalendar>>();
	}
	
	public void setDateDebutString(final String dateDebutString) {
		this.dateDebutString = dateDebutString;
	}

	public void setDateFinCoursString(final String dateFinCoursString) {
		this.dateFinCoursString = dateFinCoursString;
	}

	public void setJoursRemplaces(List<JoursRemplaces> joursRemplaces) {
		this.joursRemplaces = joursRemplaces;
	}

	public void setLongName(final String longName) {
		this.longName = longName;
	}

	public void setShortName(final String shortName) {
		this.shortName = shortName;
	}

	@Override
	public String toString() {
		return this.longName;
	}
<<<<<<< HEAD

	public List<JoursRemplaces> getJoursRemplaces() {
		return joursRemplaces;
	}

	public void setJoursRemplaces(List<JoursRemplaces> joursRemplaces) {
		this.joursRemplaces = joursRemplaces;
	}
	
	

	public int getMaxActivities() {
		return maxActivities;
	}

	public void setMaxActivities(int maxActivities) {
		this.maxActivities = maxActivities;
	}
=======
>>>>>>> dev
}
